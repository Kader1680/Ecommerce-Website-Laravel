name: test-and-deploy

on:
  push:
    branches: [main]           # or [main, staging] etc.
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, xml, ctype, json, bcmath, curl, fileinfo, pdo_mysql
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Install NPM deps & build
        run: |
          npm ci
          npm run build          # use "npm run prod" for Mix

      - name: Directory permissions
        run: chmod -R 755 storage bootstrap/cache

      - name: Generate key
        run: php artisan key:generate

      - name: Run PHPUnit
        run: php artisan test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'   # deploy only on main
    steps:
      - uses: actions/checkout@v4
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /var/www/your-app    # <- project root on server
            php artisan down --message="Deploying..."
            git pull origin main
            composer install --optimize-autoloader --no-dev
            npm ci
            npm run build
            php artisan migrate --force
            php artisan optimize
            php artisan up
